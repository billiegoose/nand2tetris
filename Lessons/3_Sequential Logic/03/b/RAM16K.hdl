// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux4Way(sel=address[12..13], in=load, a=load0, b=load1, c=load2, d=load3);
    RAM4K(address=address[0..11], in=in, load=load0, out=R0);
    RAM4K(address=address[0..11], in=in, load=load1, out=R1);
    RAM4K(address=address[0..11], in=in, load=load2, out=R2);
    RAM4K(address=address[0..11], in=in, load=load3, out=R3);
    Mux4Way16(sel=address[12..13], a=R0, b=R1, c=R2, d=R3, out=out);
}