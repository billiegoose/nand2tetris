// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out hold the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(sel=address[9..11], in=load, a=load0, b=load1, c=load2, d=load3, e=load4, f=load5, g=load6, h=load7);
    RAM512(address=address[0..8], in=in, load=load0, out=R0);
    RAM512(address=address[0..8], in=in, load=load1, out=R1);
    RAM512(address=address[0..8], in=in, load=load2, out=R2);
    RAM512(address=address[0..8], in=in, load=load3, out=R3);
    RAM512(address=address[0..8], in=in, load=load4, out=R4);
    RAM512(address=address[0..8], in=in, load=load5, out=R5);
    RAM512(address=address[0..8], in=in, load=load6, out=R6);
    RAM512(address=address[0..8], in=in, load=load7, out=R7);
    Mux8Way16(sel=address[9..11], a=R0, b=R1, c=R2, d=R3, e=R4, f=R5, g=R6, h=R7, out=out);
}